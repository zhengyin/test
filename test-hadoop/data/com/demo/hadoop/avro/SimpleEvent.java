/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.demo.hadoop.avro;  
@SuppressWarnings("all")
/** http://gitbook.kongfz.com */
@org.apache.avro.specific.AvroGenerated
public class SimpleEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SimpleEvent\",\"namespace\":\"com.demo.hadoop.avro\",\"doc\":\"http://gitbook.kongfz.com\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"uuid\",\"type\":[\"string\",\"null\"]},{\"name\":\"eventId\",\"type\":\"int\"},{\"name\":\"_date\",\"type\":[\"string\",\"null\"]},{\"name\":\"_timestamp\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long id;
  @Deprecated public java.lang.CharSequence uuid;
  @Deprecated public int eventId;
  @Deprecated public java.lang.CharSequence _date;
  @Deprecated public int _timestamp;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public SimpleEvent() {}

  /**
   * All-args constructor.
   */
  public SimpleEvent(java.lang.Long id, java.lang.CharSequence uuid, java.lang.Integer eventId, java.lang.CharSequence _date, java.lang.Integer _timestamp) {
    this.id = id;
    this.uuid = uuid;
    this.eventId = eventId;
    this._date = _date;
    this._timestamp = _timestamp;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return uuid;
    case 2: return eventId;
    case 3: return _date;
    case 4: return _timestamp;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: uuid = (java.lang.CharSequence)value$; break;
    case 2: eventId = (java.lang.Integer)value$; break;
    case 3: _date = (java.lang.CharSequence)value$; break;
    case 4: _timestamp = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'eventId' field.
   */
  public java.lang.Integer getEventId() {
    return eventId;
  }

  /**
   * Sets the value of the 'eventId' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.Integer value) {
    this.eventId = value;
  }

  /**
   * Gets the value of the '_date' field.
   */
  public java.lang.CharSequence getDate$1() {
    return _date;
  }

  /**
   * Sets the value of the '_date' field.
   * @param value the value to set.
   */
  public void setDate$1(java.lang.CharSequence value) {
    this._date = value;
  }

  /**
   * Gets the value of the '_timestamp' field.
   */
  public java.lang.Integer getTimestamp$1() {
    return _timestamp;
  }

  /**
   * Sets the value of the '_timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp$1(java.lang.Integer value) {
    this._timestamp = value;
  }

  /** Creates a new SimpleEvent RecordBuilder */
  public static com.demo.hadoop.avro.SimpleEvent.Builder newBuilder() {
    return new com.demo.hadoop.avro.SimpleEvent.Builder();
  }
  
  /** Creates a new SimpleEvent RecordBuilder by copying an existing Builder */
  public static com.demo.hadoop.avro.SimpleEvent.Builder newBuilder(com.demo.hadoop.avro.SimpleEvent.Builder other) {
    return new com.demo.hadoop.avro.SimpleEvent.Builder(other);
  }
  
  /** Creates a new SimpleEvent RecordBuilder by copying an existing SimpleEvent instance */
  public static com.demo.hadoop.avro.SimpleEvent.Builder newBuilder(com.demo.hadoop.avro.SimpleEvent other) {
    return new com.demo.hadoop.avro.SimpleEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for SimpleEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SimpleEvent>
    implements org.apache.avro.data.RecordBuilder<SimpleEvent> {

    private long id;
    private java.lang.CharSequence uuid;
    private int eventId;
    private java.lang.CharSequence _date;
    private int _timestamp;

    /** Creates a new Builder */
    private Builder() {
      super(com.demo.hadoop.avro.SimpleEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.demo.hadoop.avro.SimpleEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventId)) {
        this.eventId = data().deepCopy(fields()[2].schema(), other.eventId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other._date)) {
        this._date = data().deepCopy(fields()[3].schema(), other._date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other._timestamp)) {
        this._timestamp = data().deepCopy(fields()[4].schema(), other._timestamp);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing SimpleEvent instance */
    private Builder(com.demo.hadoop.avro.SimpleEvent other) {
            super(com.demo.hadoop.avro.SimpleEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uuid)) {
        this.uuid = data().deepCopy(fields()[1].schema(), other.uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventId)) {
        this.eventId = data().deepCopy(fields()[2].schema(), other.eventId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other._date)) {
        this._date = data().deepCopy(fields()[3].schema(), other._date);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other._timestamp)) {
        this._timestamp = data().deepCopy(fields()[4].schema(), other._timestamp);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Long getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'uuid' field */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }
    
    /** Sets the value of the 'uuid' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.uuid = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'uuid' field has been set */
    public boolean hasUuid() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'uuid' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'eventId' field */
    public java.lang.Integer getEventId() {
      return eventId;
    }
    
    /** Sets the value of the 'eventId' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder setEventId(int value) {
      validate(fields()[2], value);
      this.eventId = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'eventId' field has been set */
    public boolean hasEventId() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'eventId' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder clearEventId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the '_date' field */
    public java.lang.CharSequence getDate$1() {
      return _date;
    }
    
    /** Sets the value of the '_date' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder setDate$1(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this._date = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the '_date' field has been set */
    public boolean hasDate$1() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the '_date' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder clearDate$1() {
      _date = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the '_timestamp' field */
    public java.lang.Integer getTimestamp$1() {
      return _timestamp;
    }
    
    /** Sets the value of the '_timestamp' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder setTimestamp$1(int value) {
      validate(fields()[4], value);
      this._timestamp = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the '_timestamp' field has been set */
    public boolean hasTimestamp$1() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the '_timestamp' field */
    public com.demo.hadoop.avro.SimpleEvent.Builder clearTimestamp$1() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public SimpleEvent build() {
      try {
        SimpleEvent record = new SimpleEvent();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.uuid = fieldSetFlags()[1] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.eventId = fieldSetFlags()[2] ? this.eventId : (java.lang.Integer) defaultValue(fields()[2]);
        record._date = fieldSetFlags()[3] ? this._date : (java.lang.CharSequence) defaultValue(fields()[3]);
        record._timestamp = fieldSetFlags()[4] ? this._timestamp : (java.lang.Integer) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
